#!/bin/sh
# TODO: map caps lock to ctrl
# TODO: reduce motion blur
# TODO: keybinds for mission control pane 1234 -> option+1234

if ! command -v brew > /dev/null; then
  /bin/bash -c \
    "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

brew update --force # https://github.com/Homebrew/brew/issues/1151

brew bundle --file=- <<EOF
  brew "universal-ctags", args: ["HEAD"]
  brew "the_silver_searcher"
  brew "neovim"
  brew "zsh"
  brew "tmux"
  cask "iterm2"

  brew "skhd"
  brew "yabai"

  brew "discord"

  brew "gh"

  brew "postgres", restart_service: :changed
  brew "redis", restart_service: :changed

  tap "luckyframework/homebrew-lucky"
  brew "lucky"
  brew "yarn"
  brew "openssl"
EOF

# otherwise libssl headers aren't found
brew unlink openssl && brew link openssl --force

if [ ! -d ~/.oh-my-zsh ]; then
  git clone git@github.com:robbyrussell/oh-my-zsh.git ~/.oh-my-zsh || git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
fi

if [ ! -d "$HOME/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf
fi

add_or_update_asdf_plugin() {
  local name="$1"
  local url="$2"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name" "$url"
  else
    asdf plugin-update "$name"
  fi
}

source "$HOME/.asdf/asdf.sh"
add_or_update_asdf_plugin "ruby" "https://github.com/asdf-vm/asdf-ruby.git"
add_or_update_asdf_plugin "nodejs" "https://github.com/asdf-vm/asdf-nodejs.git"
add_or_update_asdf_plugin "crystal" "https://github.com/asdf-community/asdf-crystal.git"

install_asdf_language() {
  local language="$1"
  local version
  version="$(asdf list-all "$language" | grep -v "[a-z]" | tail -1)"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
    asdf global "$language" "$version"
  fi
}

install_asdf_language "ruby"
gem update --system
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

install_asdf_language "nodejs"

install_asdf_language "crystal"
